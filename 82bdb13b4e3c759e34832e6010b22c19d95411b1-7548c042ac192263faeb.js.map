{"version":3,"file":"82bdb13b4e3c759e34832e6010b22c19d95411b1-7548c042ac192263faeb.js","mappings":"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","sources":["webpack://product-website-template/./src/components/ParsedHTML/ParsedHTML.module.css","webpack://product-website-template/./node_modules/react-loading-skeleton/dist/index.js","webpack://product-website-template/./src/hooks/htmlParser/anchor/getAnchor.tsx","webpack://product-website-template/./src/hooks/htmlParser/list/getList.module.css","webpack://product-website-template/./src/hooks/htmlParser/table/getTable.module.css","webpack://product-website-template/./src/hooks/htmlParser/useHtmlParser.ts","webpack://product-website-template/./src/hooks/htmlParser/paragraph/getParagraph.tsx","webpack://product-website-template/./src/hooks/htmlParser/listItem/getListItem.tsx","webpack://product-website-template/./src/hooks/htmlParser/image/getImage.tsx","webpack://product-website-template/./src/hooks/htmlParser/getBlockquote/getBlockquote.tsx","webpack://product-website-template/./src/hooks/htmlParser/alert/getAlert.tsx","webpack://product-website-template/./src/hooks/htmlParser/alert/getAlert.module.css","webpack://product-website-template/./src/hooks/htmlParser/table/getTable.tsx","webpack://product-website-template/./src/hooks/htmlParser/tableRow/getTableRow.tsx","webpack://product-website-template/./src/hooks/htmlParser/tableRow/getTableRow.module.css","webpack://product-website-template/./src/hooks/htmlParser/tableHeader/getTableHeader.tsx","webpack://product-website-template/./src/hooks/htmlParser/tableHeader/getTableHeader.module.css","webpack://product-website-template/./src/hooks/htmlParser/tableHeaderCell/getTableHeaderCell.tsx","webpack://product-website-template/./src/hooks/htmlParser/tableBody/getTableBody.tsx","webpack://product-website-template/./src/hooks/htmlParser/tableBody/getTableBody.module.css","webpack://product-website-template/./src/hooks/htmlParser/tableCell/getTableCell.tsx","webpack://product-website-template/./src/hooks/htmlParser/tableCell/getTableCell.module.css","webpack://product-website-template/./src/hooks/htmlParser/svg/getSvg.tsx","webpack://product-website-template/./src/hooks/htmlParser/code/getCode.tsx","webpack://product-website-template/./src/hooks/htmlParser/list/getList.tsx","webpack://product-website-template/./src/hooks/htmlParser/header/getHeader.tsx","webpack://product-website-template/./src/components/ParsedHTML/ParsedHTML.tsx","webpack://product-website-template/./src/hooks/resources/gitHub.ts","webpack://product-website-template/./src/hooks/useGitHubDirectories.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"ParsedHTML-module--container--4efc0\";","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import _ from \"lodash\";\r\nimport { Link } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { navigate } from \"gatsby\";\r\nimport { domToReact } from \"html-react-parser\";\r\nimport { TGitHubDirectory } from \"../../useGitHubDirectories\";\r\n\r\nexport const getAnchor = (\r\n  props: any,\r\n  children: any,\r\n  options: any,\r\n  directories: TGitHubDirectory[],\r\n  location: string,\r\n) => {\r\n  const handleClick = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    const targetFile = _.upperFirst(props.href.substring(props.href.lastIndexOf(\"/\") + 1).replace(\".md\", \"\"));\r\n\r\n    // No link\r\n    if (!props.href) {\r\n      navigate(\"#\");\r\n\r\n      return;\r\n    }\r\n\r\n    // Anchor Links\r\n    if (props.className === \"anchor\" || Array.from(props.href)[0] === \"#\") {\r\n      handleAnchorClick(props); // handles on-page scroll anchors\r\n\r\n      return;\r\n    }\r\n\r\n    // Internal Links\r\n    if (!props.href.includes(\"://\")) {\r\n      handleInternalLinks(props, targetFile, location, directories);\r\n\r\n      return;\r\n    }\r\n\r\n    // External Links\r\n    if (props.href.includes(\"://\")) {\r\n      open(props.href);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const attributes = {\r\n    ...props,\r\n    onClick: handleClick,\r\n  };\r\n\r\n  return <Link {...attributes}>{domToReact(children, options)}</Link>;\r\n};\r\n\r\nconst handleInternalLinks = (props: any, targetFile: string, location: string, directories: TGitHubDirectory[]) => {\r\n  // Internal Links: same directory\r\n  if (!props.href.includes(\"/\")) {\r\n    const targetDirectory = _.upperFirst(location.split(\"/\").reverse()[1]);\r\n    navigate(`/${targetDirectory}/${targetFile}`);\r\n\r\n    return; // ensure no other flow is triggered\r\n  }\r\n\r\n  // Internal Links: different directory\r\n  if (props.href.includes(\"/\")) {\r\n    const targetDirectory = props.href.split(\"/\").reverse()[1];\r\n    const directoryFound = directories.some(\r\n      (directory) => directory.location.substring(directory.location.lastIndexOf(\"/\") + 1) === targetDirectory,\r\n    );\r\n\r\n    // Internal Link exists: redirect to page\r\n    if (directoryFound) {\r\n      navigate(`/${_.upperFirst(targetDirectory)}/${targetFile}`);\r\n    }\r\n\r\n    // Internal Link does not exist: redirect to online GitHub environment (TODO)\r\n    if (!directoryFound) {\r\n      const hrefWithLeadingSlash = !props.href.startsWith(\"/\") ? `/${props.href}` : props.href;\r\n\r\n      open(`${process.env.GATSBY_GITHUB_REPOSITORY_URL}/blob/master${hrefWithLeadingSlash}`);\r\n    }\r\n\r\n    return; // ensure no other flow is triggered\r\n  }\r\n};\r\n\r\nconst handleAnchorClick = (props: any) => {\r\n  const targetId = props.id ?? props.href.replace(\"#\", \"user-content-\");\r\n\r\n  const target = document.getElementById(targetId);\r\n  const headerHeight = document.getElementById(\"header\")?.clientHeight ?? 100;\r\n\r\n  if (target) {\r\n    window.scrollTo({ top: target.offsetTop - (headerHeight + 24), behavior: \"smooth\" }); // +24 simply adds some padding\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var list = \"getList-module--list--5f814\";","// extracted by mini-css-extract-plugin\nexport var table = \"getTable-module--table--b07c6\";","import { attributesToProps } from \"html-react-parser\";\nimport { getHeader } from \"./header/getHeader\";\nimport { getAnchor } from \"./anchor/getAnchor\";\nimport { getListItem } from \"./listItem/getListItem\";\nimport { getImage } from \"./image/getImage\";\nimport { getList } from \"./list/getList\";\nimport { getParagraph } from \"./paragraph/getParagraph\";\nimport { getBlockquote } from \"./getBlockquote/getBlockquote\";\nimport { getTable } from \"./table/getTable\";\nimport { getTableRow } from \"./tableRow/getTableRow\";\nimport { getTableHeader } from \"./tableHeader/getTableHeader\";\nimport { getTableHeaderCell } from \"./tableHeaderCell/getTableHeaderCell\";\nimport { getTableBody } from \"./tableBody/getTableBody\";\nimport { getTableCell } from \"./tableCell/getTableCell\";\nimport { getCode } from \"./code/getCode\";\nimport { getAlert } from \"./alert/getAlert\";\nimport { useGitHubDirectories } from \"../useGitHubDirectories\";\nimport { getSvg } from \"./svg/getSvg\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type TAriaLabels = {\n  scrollRightButton: string;\n  scrollLeftButton: string;\n};\n\nexport const useHtmlParser = (location: string) => {\n  const { directories } = useGitHubDirectories();\n  const { t } = useTranslation();\n\n  const ariabLabels = {\n    scrollLeftButton: t(\"Left scroll button\"),\n    scrollRightButton: t(\"Right scroll button\"),\n  };\n\n  const options = {\n    replace: ({ attribs, parent, children, name }: any) => {\n      if (!attribs) {\n        return;\n      }\n\n      const props = attributesToProps(attribs);\n\n      if (attribs && (name === \"h1\" || name === \"h2\" || name === \"h3\" || name === \"h4\")) {\n        return getHeader(name, props, children, options);\n      }\n\n      if (attribs && name === \"p\") {\n        return getParagraph(props, children, options);\n      }\n\n      if (attribs && name === \"a\") {\n        return getAnchor(props, children, options, directories, location);\n      }\n\n      if (attribs && (name === \"ol\" || name === \"ul\")) {\n        return getList(name, props, children, options);\n      }\n\n      if (attribs && name === \"li\") {\n        return getListItem(props, parent, children, options);\n      }\n\n      if (attribs && name === \"img\") {\n        return getImage(props, parent);\n      }\n\n      if (attribs && name === \"blockquote\") {\n        return getBlockquote(children, options);\n      }\n\n      if (attribs && name === \"div\" && attribs.class?.includes(\"markdown-alert\")) {\n        return getAlert(children, options, attribs.class);\n      }\n\n      if (attribs && name === \"table\") {\n        return getTable(props, children, options, ariabLabels);\n      }\n\n      if (attribs && name === \"tr\") {\n        return getTableRow(props, children, options);\n      }\n\n      if (attribs && name === \"thead\") {\n        return getTableHeader(props, children, options);\n      }\n\n      if (attribs && name === \"th\") {\n        return getTableHeaderCell(props, children, options);\n      }\n\n      if (attribs && name === \"tbody\") {\n        return getTableBody(props, children, options);\n      }\n\n      if (attribs && name === \"td\") {\n        return getTableCell(props, children, options);\n      }\n\n      if (attribs && name === \"svg\") {\n        return getSvg(props, children, options);\n      }\n\n      if (attribs && (name === \"code\" || name === \"pre\")) {\n        return getCode(name, props, children, options, ariabLabels);\n      }\n    },\n  };\n\n  return { options };\n};\n","import { Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getParagraph = (props: any, children: any, options: any) => {\r\n  return <Paragraph {...props}>{domToReact(children, options)}</Paragraph>;\r\n};\r\n","import { OrderedListItem, UnorderedListItem } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getListItem = (props: any, parent: any, children: any, options: any) => {\r\n  switch (parent.name) {\r\n    case \"ol\":\r\n      return <OrderedListItem {...props}>{domToReact(children, options)}</OrderedListItem>;\r\n    case \"ul\":\r\n      return <UnorderedListItem {...props}>{domToReact(children, options)}</UnorderedListItem>;\r\n  }\r\n\r\n  return;\r\n};\r\n","import { Image } from \"@utrecht/component-library-react/dist/css-module\";\r\n\r\nexport const getImage = (props: any, parent: any) => {\r\n  let src = props.src;\r\n\r\n  if (!props.src.includes(\"https://\" || \"http://\")) {\r\n    const sessionUrl = process.env.GATSBY_GITHUB_REPOSITORY_URL;\r\n    const url = sessionUrl?.replace(\"https://github.com/\", \"\");\r\n\r\n    src = `https://raw.githubusercontent.com/${url}/master/docs/features/${props.src}`;\r\n  }\r\n\r\n  let alt = props.alt;\r\n  if (!props.alt) {\r\n    alt = props.title;\r\n  }\r\n  if (!props.alt && !props.title) {\r\n    alt = props.src;\r\n  }\r\n\r\n  const attributes = {\r\n    ...props,\r\n    src,\r\n    alt,\r\n    href: \"\",\r\n    onClick: (e: MouseEvent) => {\r\n      if (parent.name === \"a\") {\r\n        e.preventDefault();\r\n      }\r\n      if (parent.name !== \"a\") {\r\n        e.stopPropagation();\r\n        open(src);\r\n      }\r\n    },\r\n  };\r\n  return <Image {...attributes} />;\r\n};\r\n","import { Alert } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getBlockquote = (children: any, options: any) => {\r\n  return <Alert>{domToReact(children, options)}</Alert>;\r\n};\r\n","import * as styles from \"./getAlert.module.css\";\r\nimport { Alert } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getAlert = (children: any, options: any, type: any) => {\r\n  switch (true) {\r\n    case type.includes(\"note\") || type.includes(\"info\"):\r\n      return (\r\n        <Alert className={styles.info} type=\"info\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    case type.includes(\"error\"):\r\n      return (\r\n        <Alert className={styles.error} type=\"error\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    case type.includes(\"warning\"):\r\n      return (\r\n        <Alert className={styles.warning} type=\"warning\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    case type.includes(\"succes\") || type.includes(\"ok\"):\r\n      return (\r\n        <Alert className={styles.ok} type=\"ok\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    default:\r\n      return <Alert type=\"info\">{domToReact(children, options)}</Alert>;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var error = \"getAlert-module--error--a7ff3\";\nexport var info = \"getAlert-module--info--6faee\";\nexport var ok = \"getAlert-module--ok--75642\";\nexport var warning = \"getAlert-module--warning--16e7a\";","import * as styles from \"./getTable.module.css\";\r\nimport { Table } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\nimport { HorizontalOverflowWrapper } from \"@conduction/components\";\r\nimport { TAriaLabels } from \"../useHtmlParser\";\r\n\r\nexport const getTable = (props: any, children: any, options: any, ariaLabels: TAriaLabels) => {\r\n  return (\r\n    <HorizontalOverflowWrapper {...{ ariaLabels }}>\r\n      <Table className={styles.table} {...props}>\r\n        {domToReact(children, options)}\r\n      </Table>\r\n    </HorizontalOverflowWrapper>\r\n  );\r\n};\r\n","import * as styles from \"./getTableRow.module.css\";\r\nimport { TableRow } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableRow = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableRow className={styles.tableRow} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableRow>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableRow = \"getTableRow-module--tableRow--43fa5\";","import * as styles from \"./getTableHeader.module.css\";\r\nimport { TableHeader } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableHeader = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableHeader className={styles.tableHeader} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableHeader>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableHeader = \"getTableHeader-module--tableHeader--94fa3\";","import { TableHeaderCell } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableHeaderCell = (props: any, children: any, options: any) => {\r\n  return <TableHeaderCell {...props}>{domToReact(children, options)}</TableHeaderCell>;\r\n};\r\n","import * as styles from \"./getTableBody.module.css\";\r\nimport { TableBody } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableBody = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableBody className={styles.tableBody} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableBody>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableBody = \"getTableBody-module--tableBody--7e02c\";","import * as styles from \"./getTableCell.module.css\";\r\nimport { TableCell } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableCell = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableCell className={styles.tableCell} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableCell>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableCell = \"getTableCell-module--tableCell--c1c5e\";","import { domToReact } from \"html-react-parser\";\r\n\r\nexport const getSvg = (props: any, children: any, options: any) => {\r\n  if (props.className.includes(\"octicon octicon-link\")) {\r\n    return <></>;\r\n  }\r\n\r\n  return <svg {...props}>{domToReact(children, options)}</svg>;\r\n};\r\n","import { HorizontalOverflowWrapper } from \"@conduction/components\";\r\nimport { Code, CodeBlock } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\nimport { TAriaLabels } from \"../useHtmlParser\";\r\n\r\nexport const getCode = (name: string, props: any, children: any, options: any, ariaLabels: TAriaLabels) => {\r\n  switch (name) {\r\n    case \"code\":\r\n      return <Code {...props}>{domToReact(children, options)}</Code>;\r\n    case \"pre\":\r\n      return (\r\n        <CodeBlock {...props}>\r\n          <HorizontalOverflowWrapper {...{ ariaLabels }}>{domToReact(children, options)}</HorizontalOverflowWrapper>\r\n        </CodeBlock>\r\n      );\r\n  }\r\n};\r\n","import * as styles from \"./getList.module.css\";\r\nimport { OrderedList, UnorderedList } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getList = (name: string, props: any, children: any, options: any) => {\r\n  switch (name) {\r\n    case \"ol\":\r\n      return (\r\n        <OrderedList className={styles.list} {...props}>\r\n          {domToReact(children, options)}\r\n        </OrderedList>\r\n      );\r\n    case \"ul\":\r\n      return (\r\n        <UnorderedList className={styles.list} {...props}>\r\n          {domToReact(children, options)}\r\n        </UnorderedList>\r\n      );\r\n  }\r\n};\r\n","import { Heading1, Heading2, Heading3, Heading4 } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getHeader = (name: string, props: any, children: any, options: any) => {\r\n  switch (name) {\r\n    case \"h1\":\r\n      return <Heading1 {...props}>{domToReact(children, options)}</Heading1>;\r\n    case \"h2\":\r\n      return <Heading2 {...props}>{domToReact(children, options)}</Heading2>;\r\n    case \"h3\":\r\n      return <Heading3 {...props}>{domToReact(children, options)}</Heading3>;\r\n    case \"h4\":\r\n      return <Heading4 {...props}>{domToReact(children, options)}</Heading4>;\r\n  }\r\n};\r\n","import * as React from \"react\";\nimport * as styles from \"./ParsedHTML.module.css\";\nimport Parser from \"html-react-parser\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Alert } from \"@utrecht/component-library-react/dist/css-module\";\nimport { UseQueryResult } from \"react-query\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWarning } from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport { useHtmlParser } from \"../../hooks/htmlParser/useHtmlParser\";\nimport _ from \"lodash\";\n\ninterface ParsedHTMLProps {\n  contentQuery: UseQueryResult<any, Error>;\n  location: string;\n  layoutClassName?: string;\n}\n\nexport const ParsedHTML: React.FC<ParsedHTMLProps> = ({ contentQuery, location, layoutClassName }) => {\n  const { options } = useHtmlParser(location);\n\n  if (contentQuery.isLoading)\n    return (\n      <div className={styles.container}>\n        <Skeleton height=\"200px\" />\n      </div>\n    );\n\n  if (contentQuery.isError)\n    return (\n      <div className={styles.container}>\n        <Alert icon={<FontAwesomeIcon icon={faWarning} />} type=\"error\">\n          Oops, something went wrong retrieving the .md file from GitHub.\n        </Alert>\n      </div>\n    );\n\n  if (_.isArray(contentQuery.data)) return;\n\n  return (\n    <div className={clsx(styles.container, layoutClassName && layoutClassName)}>\n      {Parser(contentQuery.data, options)}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { useQuery } from \"react-query\";\nimport APIService from \"../../apiService/apiService\";\nimport APIContext from \"../../apiService/apiContext\";\n\nexport const useGitHub = () => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getContent = (filePath: string) =>\n    useQuery<any, Error>([\"contents\", filePath], () => API?.GitHub.getContent(filePath), {\n      onError: (error) => {\n        console.warn(error.message);\n      },\n    });\n\n  const getDirectoryItems = (directoryPath: string) =>\n    useQuery<any[], Error>([\"directory-items\", directoryPath], () => API?.GitHub.getDirectoryItems(directoryPath), {\n      onError: (error) => {\n        console.warn(error.message);\n      },\n    });\n\n  return { getContent, getDirectoryItems };\n};\n","import * as React from \"react\";\n\nexport type TGitHubDirectory = {\n  name: string;\n  location: string;\n};\n\nexport const useGitHubDirectories = () => {\n  const [directories, setDirectories] = React.useState<TGitHubDirectory[]>([]);\n\n  React.useEffect(() => {\n    const gitHubDirectoryPathsString: string | undefined = process.env.GATSBY_GITHUB_DOCS_DIRECTORY_PATHS;\n\n    if (!gitHubDirectoryPathsString) return;\n\n    try {\n      const directories = JSON.parse(gitHubDirectoryPathsString);\n\n      setDirectories(directories);\n    } catch {\n      console.warn(\"Something went wrong parsing the GitHub directories.\");\n    }\n  }, []);\n\n  const getSlugFromName = (name: string): string => name.replace(\" \", \"-\");\n  const getNameFromSlug = (slug: string): string => slug.replace(\"-\", \" \"); // internal function\n\n  const getDirectoryReadMeLocation = (pageSlug: string): string => {\n    const directory = directories.find((directory) => directory.name === getNameFromSlug(pageSlug));\n\n    if (!directory) return \"\";\n\n    return `${directory.location}/README.md`;\n  };\n\n  const getDetailMdLocation = (pageSlug: string, detailPageSlug: string): string => {\n    const directory = directories.find((directory) => directory.name === getNameFromSlug(pageSlug));\n\n    if (!directory) return \"\";\n\n    return `${directory.location}/${getNameFromSlug(detailPageSlug)}.md`;\n  };\n\n  return { directories, getSlugFromName, getDirectoryReadMeLocation, getDetailMdLocation };\n};\n"],"names":["container","SkeletonThemeContext","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","count","wrapper","Wrapper","className","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","handleInternalLinks","props","targetFile","location","directories","href","includes","targetDirectory","split","reverse","directoryFound","some","directory","substring","lastIndexOf","navigate","_upperFirst","hrefWithLeadingSlash","startsWith","open","process","handleAnchorClick","_props$id","_document$getElementB","_document$getElementB2","targetId","id","replace","target","document","getElementById","headerHeight","clientHeight","window","scrollTo","top","offsetTop","behavior","list","useHtmlParser","useGitHubDirectories","t","useTranslation","ariabLabels","scrollLeftButton","scrollRightButton","options","_ref","_attribs$class","attribs","parent","children","name","attributesToProps","getParagraph","_jsx","Paragraph","domToReact","getAnchor","attributes","onClick","e","preventDefault","Array","from","Link","getListItem","OrderedListItem","UnorderedListItem","getImage","src","sessionUrl","url","alt","title","stopPropagation","Image","getBlockquote","Alert","class","getAlert","type","getTable","ariaLabels","HorizontalOverflowWrapper","Table","getTableRow","TableRow","getTableHeader","TableHeader","getTableHeaderCell","TableHeaderCell","getTableBody","TableBody","getTableCell","TableCell","getSvg","_Fragment","getCode","Code","CodeBlock","getList","OrderedList","styles","UnorderedList","getHeader","Heading1","Heading2","Heading3","Heading4","ParsedHTML","contentQuery","layoutClassName","isLoading","isError","icon","FontAwesomeIcon","faWarning","_isArray","data","clsx","Parser","useGitHub","API","React","APIContext","getContent","filePath","useQuery","GitHub","onError","error","console","warn","message","getDirectoryItems","directoryPath","setDirectories","gitHubDirectoryPathsString","JSON","parse","getNameFromSlug","slug","getSlugFromName","getDirectoryReadMeLocation","pageSlug","find","getDetailMdLocation","detailPageSlug"],"sourceRoot":""}